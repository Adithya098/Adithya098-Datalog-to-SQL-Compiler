Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    FUNCTION

Grammar

Rule 0     S' -> program
Rule 1     program -> statement program
Rule 2     program -> statement
Rule 3     program -> empty
Rule 4     empty -> <empty>
Rule 5     statement -> assertion
Rule 6     statement -> retraction
Rule 7     statement -> query
Rule 8     statement -> requirement
Rule 9     assertion -> clause DECIMAL
Rule 10    retraction -> clause TILDE
Rule 11    query -> literal QUESTION_MARK
Rule 12    requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
Rule 13    clause -> literal HEAD_AND_BODY_SEPARATOR body
Rule 14    clause -> literal
Rule 15    body -> literal COMMA body
Rule 16    body -> literal
Rule 17    literal -> predicate LEFT_BRACKET RIGHT_BRACKET
Rule 18    literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET
Rule 19    literal -> predicate
Rule 20    literal -> comparison
Rule 21    literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
Rule 22    predicate -> IDENTIFIER
Rule 23    predicate -> STRING
Rule 24    terms -> term COMMA terms
Rule 25    terms -> term
Rule 26    term -> VARIABLE
Rule 27    term -> constant
Rule 28    term -> IGNORE
Rule 29    constant -> IDENTIFIER
Rule 30    constant -> STRING
Rule 31    constant -> DATETIME
Rule 32    constant -> INTEGER
Rule 33    constant -> BOOLEAN
Rule 34    comparison -> comparisonterms EQUAL comparisonterms
Rule 35    comparison -> comparisonterms NOT_EQUAL comparisonterms
Rule 36    comparison -> comparisonterms LESS_THAN comparisonterms
Rule 37    comparison -> comparisonterms MORE_THAN comparisonterms
Rule 38    comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms
Rule 39    comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms
Rule 40    comparison -> comparisonterms NOT_EQUAL_ALT comparisonterms
Rule 41    comparisonterms -> comparisonterm
Rule 42    comparisonterms -> comparisonterm PLUS comparisonterms
Rule 43    comparisonterms -> comparisonterm MINUS comparisonterms
Rule 44    comparisonterms -> comparisonterm DIVISION comparisonterms
Rule 45    comparisonterms -> comparisonterm MULTIPLY comparisonterms
Rule 46    comparisonterm -> term

Terminals, with rules where they appear

BOOLEAN              : 33
COMMA                : 15 24
COMMENT              : 
DATETIME             : 31
DECIMAL              : 9 12
DIVISION             : 44
EQUAL                : 34
FUNCTION             : 
HEAD_AND_BODY_SEPARATOR : 13 21
IDENTIFIER           : 12 21 22 29
IGNORE               : 28
INTEGER              : 32
LEFT_BRACKET         : 12 17 18 21
LESS_THAN            : 36
LESS_THAN_OR_EQUAL_TO : 38
MINUS                : 43
MORE_THAN            : 37
MORE_THAN_OR_EQUAL_TO : 39
MULTIPLY             : 45
NOT_EQUAL            : 35
NOT_EQUAL_ALT        : 40
PLUS                 : 42
QUESTION_MARK        : 11
RIGHT_BRACKET        : 12 17 18 21
STRING               : 23 30
TILDE                : 10
VARIABLE             : 21 26
error                : 

Nonterminals, with rules where they appear

assertion            : 5
body                 : 13 15
clause               : 9 10
comparison           : 20
comparisonterm       : 41 42 43 44 45
comparisonterms      : 34 34 35 35 36 36 37 37 38 38 39 39 40 40 42 43 44 45
constant             : 27
empty                : 3
literal              : 11 13 14 15 16
predicate            : 17 18 19
program              : 1 0
query                : 7
requirement          : 8
retraction           : 6
statement            : 1 2
term                 : 24 25 46
terms                : 18 21 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement program
    (2) program -> . statement
    (3) program -> . empty
    (5) statement -> . assertion
    (6) statement -> . retraction
    (7) statement -> . query
    (8) statement -> . requirement
    (4) empty -> .
    (9) assertion -> . clause DECIMAL
    (10) retraction -> . clause TILDE
    (11) query -> . literal QUESTION_MARK
    (12) requirement -> . LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
    (13) clause -> . literal HEAD_AND_BODY_SEPARATOR body
    (14) clause -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (34) comparison -> . comparisonterms EQUAL comparisonterms
    (35) comparison -> . comparisonterms NOT_EQUAL comparisonterms
    (36) comparison -> . comparisonterms LESS_THAN comparisonterms
    (37) comparison -> . comparisonterms MORE_THAN comparisonterms
    (38) comparison -> . comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms
    (39) comparison -> . comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms
    (40) comparison -> . comparisonterms NOT_EQUAL_ALT comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    $end            reduce using rule 4 (empty -> .)
    LEFT_BRACKET    shift and go to state 10
    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 20
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    program                        shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    assertion                      shift and go to state 4
    retraction                     shift and go to state 5
    query                          shift and go to state 6
    requirement                    shift and go to state 7
    clause                         shift and go to state 8
    literal                        shift and go to state 9
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterms                shift and go to state 16
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> statement . program
    (2) program -> statement .
    (1) program -> . statement program
    (2) program -> . statement
    (3) program -> . empty
    (5) statement -> . assertion
    (6) statement -> . retraction
    (7) statement -> . query
    (8) statement -> . requirement
    (4) empty -> .
    (9) assertion -> . clause DECIMAL
    (10) retraction -> . clause TILDE
    (11) query -> . literal QUESTION_MARK
    (12) requirement -> . LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
    (13) clause -> . literal HEAD_AND_BODY_SEPARATOR body
    (14) clause -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (34) comparison -> . comparisonterms EQUAL comparisonterms
    (35) comparison -> . comparisonterms NOT_EQUAL comparisonterms
    (36) comparison -> . comparisonterms LESS_THAN comparisonterms
    (37) comparison -> . comparisonterms MORE_THAN comparisonterms
    (38) comparison -> . comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms
    (39) comparison -> . comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms
    (40) comparison -> . comparisonterms NOT_EQUAL_ALT comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

  ! reduce/reduce conflict for $end resolved using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    LEFT_BRACKET    shift and go to state 10
    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 20
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

  ! $end            [ reduce using rule 4 (empty -> .) ]

    statement                      shift and go to state 2
    program                        shift and go to state 24
    empty                          shift and go to state 3
    assertion                      shift and go to state 4
    retraction                     shift and go to state 5
    query                          shift and go to state 6
    requirement                    shift and go to state 7
    clause                         shift and go to state 8
    literal                        shift and go to state 9
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterms                shift and go to state 16
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 3

    (3) program -> empty .

    $end            reduce using rule 3 (program -> empty .)


state 4

    (5) statement -> assertion .

    LEFT_BRACKET    reduce using rule 5 (statement -> assertion .)
    VARIABLE        reduce using rule 5 (statement -> assertion .)
    IDENTIFIER      reduce using rule 5 (statement -> assertion .)
    STRING          reduce using rule 5 (statement -> assertion .)
    IGNORE          reduce using rule 5 (statement -> assertion .)
    DATETIME        reduce using rule 5 (statement -> assertion .)
    INTEGER         reduce using rule 5 (statement -> assertion .)
    BOOLEAN         reduce using rule 5 (statement -> assertion .)
    $end            reduce using rule 5 (statement -> assertion .)


state 5

    (6) statement -> retraction .

    LEFT_BRACKET    reduce using rule 6 (statement -> retraction .)
    VARIABLE        reduce using rule 6 (statement -> retraction .)
    IDENTIFIER      reduce using rule 6 (statement -> retraction .)
    STRING          reduce using rule 6 (statement -> retraction .)
    IGNORE          reduce using rule 6 (statement -> retraction .)
    DATETIME        reduce using rule 6 (statement -> retraction .)
    INTEGER         reduce using rule 6 (statement -> retraction .)
    BOOLEAN         reduce using rule 6 (statement -> retraction .)
    $end            reduce using rule 6 (statement -> retraction .)


state 6

    (7) statement -> query .

    LEFT_BRACKET    reduce using rule 7 (statement -> query .)
    VARIABLE        reduce using rule 7 (statement -> query .)
    IDENTIFIER      reduce using rule 7 (statement -> query .)
    STRING          reduce using rule 7 (statement -> query .)
    IGNORE          reduce using rule 7 (statement -> query .)
    DATETIME        reduce using rule 7 (statement -> query .)
    INTEGER         reduce using rule 7 (statement -> query .)
    BOOLEAN         reduce using rule 7 (statement -> query .)
    $end            reduce using rule 7 (statement -> query .)


state 7

    (8) statement -> requirement .

    LEFT_BRACKET    reduce using rule 8 (statement -> requirement .)
    VARIABLE        reduce using rule 8 (statement -> requirement .)
    IDENTIFIER      reduce using rule 8 (statement -> requirement .)
    STRING          reduce using rule 8 (statement -> requirement .)
    IGNORE          reduce using rule 8 (statement -> requirement .)
    DATETIME        reduce using rule 8 (statement -> requirement .)
    INTEGER         reduce using rule 8 (statement -> requirement .)
    BOOLEAN         reduce using rule 8 (statement -> requirement .)
    $end            reduce using rule 8 (statement -> requirement .)


state 8

    (9) assertion -> clause . DECIMAL
    (10) retraction -> clause . TILDE

    DECIMAL         shift and go to state 25
    TILDE           shift and go to state 26


state 9

    (11) query -> literal . QUESTION_MARK
    (13) clause -> literal . HEAD_AND_BODY_SEPARATOR body
    (14) clause -> literal .

    QUESTION_MARK   shift and go to state 27
    HEAD_AND_BODY_SEPARATOR shift and go to state 28
    DECIMAL         reduce using rule 14 (clause -> literal .)
    TILDE           reduce using rule 14 (clause -> literal .)


state 10

    (12) requirement -> LEFT_BRACKET . IDENTIFIER RIGHT_BRACKET DECIMAL

    IDENTIFIER      shift and go to state 29


state 11

    (22) predicate -> IDENTIFIER .
    (29) constant -> IDENTIFIER .

    LEFT_BRACKET    reduce using rule 22 (predicate -> IDENTIFIER .)
    QUESTION_MARK   reduce using rule 22 (predicate -> IDENTIFIER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 22 (predicate -> IDENTIFIER .)
    DECIMAL         reduce using rule 22 (predicate -> IDENTIFIER .)
    TILDE           reduce using rule 22 (predicate -> IDENTIFIER .)
    COMMA           reduce using rule 22 (predicate -> IDENTIFIER .)
    PLUS            reduce using rule 29 (constant -> IDENTIFIER .)
    MINUS           reduce using rule 29 (constant -> IDENTIFIER .)
    DIVISION        reduce using rule 29 (constant -> IDENTIFIER .)
    MULTIPLY        reduce using rule 29 (constant -> IDENTIFIER .)
    EQUAL           reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL_ALT   reduce using rule 29 (constant -> IDENTIFIER .)


state 12

    (17) literal -> predicate . LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> predicate . LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> predicate .

    LEFT_BRACKET    shift and go to state 30
    QUESTION_MARK   reduce using rule 19 (literal -> predicate .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 19 (literal -> predicate .)
    DECIMAL         reduce using rule 19 (literal -> predicate .)
    TILDE           reduce using rule 19 (literal -> predicate .)
    COMMA           reduce using rule 19 (literal -> predicate .)


state 13

    (20) literal -> comparison .

    QUESTION_MARK   reduce using rule 20 (literal -> comparison .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 20 (literal -> comparison .)
    DECIMAL         reduce using rule 20 (literal -> comparison .)
    TILDE           reduce using rule 20 (literal -> comparison .)
    COMMA           reduce using rule 20 (literal -> comparison .)


state 14

    (21) literal -> VARIABLE . HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (26) term -> VARIABLE .

    HEAD_AND_BODY_SEPARATOR shift and go to state 31
    PLUS            reduce using rule 26 (term -> VARIABLE .)
    MINUS           reduce using rule 26 (term -> VARIABLE .)
    DIVISION        reduce using rule 26 (term -> VARIABLE .)
    MULTIPLY        reduce using rule 26 (term -> VARIABLE .)
    EQUAL           reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN       reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL_ALT   reduce using rule 26 (term -> VARIABLE .)


state 15

    (23) predicate -> STRING .
    (30) constant -> STRING .

    LEFT_BRACKET    reduce using rule 23 (predicate -> STRING .)
    QUESTION_MARK   reduce using rule 23 (predicate -> STRING .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 23 (predicate -> STRING .)
    DECIMAL         reduce using rule 23 (predicate -> STRING .)
    TILDE           reduce using rule 23 (predicate -> STRING .)
    COMMA           reduce using rule 23 (predicate -> STRING .)
    PLUS            reduce using rule 30 (constant -> STRING .)
    MINUS           reduce using rule 30 (constant -> STRING .)
    DIVISION        reduce using rule 30 (constant -> STRING .)
    MULTIPLY        reduce using rule 30 (constant -> STRING .)
    EQUAL           reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL       reduce using rule 30 (constant -> STRING .)
    LESS_THAN       reduce using rule 30 (constant -> STRING .)
    MORE_THAN       reduce using rule 30 (constant -> STRING .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL_ALT   reduce using rule 30 (constant -> STRING .)


state 16

    (34) comparison -> comparisonterms . EQUAL comparisonterms
    (35) comparison -> comparisonterms . NOT_EQUAL comparisonterms
    (36) comparison -> comparisonterms . LESS_THAN comparisonterms
    (37) comparison -> comparisonterms . MORE_THAN comparisonterms
    (38) comparison -> comparisonterms . LESS_THAN_OR_EQUAL_TO comparisonterms
    (39) comparison -> comparisonterms . MORE_THAN_OR_EQUAL_TO comparisonterms
    (40) comparison -> comparisonterms . NOT_EQUAL_ALT comparisonterms

    EQUAL           shift and go to state 32
    NOT_EQUAL       shift and go to state 33
    LESS_THAN       shift and go to state 34
    MORE_THAN       shift and go to state 35
    LESS_THAN_OR_EQUAL_TO shift and go to state 36
    MORE_THAN_OR_EQUAL_TO shift and go to state 37
    NOT_EQUAL_ALT   shift and go to state 38


state 17

    (41) comparisonterms -> comparisonterm .
    (42) comparisonterms -> comparisonterm . PLUS comparisonterms
    (43) comparisonterms -> comparisonterm . MINUS comparisonterms
    (44) comparisonterms -> comparisonterm . DIVISION comparisonterms
    (45) comparisonterms -> comparisonterm . MULTIPLY comparisonterms

    EQUAL           reduce using rule 41 (comparisonterms -> comparisonterm .)
    NOT_EQUAL       reduce using rule 41 (comparisonterms -> comparisonterm .)
    LESS_THAN       reduce using rule 41 (comparisonterms -> comparisonterm .)
    MORE_THAN       reduce using rule 41 (comparisonterms -> comparisonterm .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 41 (comparisonterms -> comparisonterm .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 41 (comparisonterms -> comparisonterm .)
    NOT_EQUAL_ALT   reduce using rule 41 (comparisonterms -> comparisonterm .)
    QUESTION_MARK   reduce using rule 41 (comparisonterms -> comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 41 (comparisonterms -> comparisonterm .)
    DECIMAL         reduce using rule 41 (comparisonterms -> comparisonterm .)
    TILDE           reduce using rule 41 (comparisonterms -> comparisonterm .)
    COMMA           reduce using rule 41 (comparisonterms -> comparisonterm .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVISION        shift and go to state 41
    MULTIPLY        shift and go to state 42


state 18

    (46) comparisonterm -> term .

    PLUS            reduce using rule 46 (comparisonterm -> term .)
    MINUS           reduce using rule 46 (comparisonterm -> term .)
    DIVISION        reduce using rule 46 (comparisonterm -> term .)
    MULTIPLY        reduce using rule 46 (comparisonterm -> term .)
    EQUAL           reduce using rule 46 (comparisonterm -> term .)
    NOT_EQUAL       reduce using rule 46 (comparisonterm -> term .)
    LESS_THAN       reduce using rule 46 (comparisonterm -> term .)
    MORE_THAN       reduce using rule 46 (comparisonterm -> term .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 46 (comparisonterm -> term .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 46 (comparisonterm -> term .)
    NOT_EQUAL_ALT   reduce using rule 46 (comparisonterm -> term .)
    QUESTION_MARK   reduce using rule 46 (comparisonterm -> term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 46 (comparisonterm -> term .)
    DECIMAL         reduce using rule 46 (comparisonterm -> term .)
    TILDE           reduce using rule 46 (comparisonterm -> term .)
    COMMA           reduce using rule 46 (comparisonterm -> term .)


state 19

    (27) term -> constant .

    PLUS            reduce using rule 27 (term -> constant .)
    MINUS           reduce using rule 27 (term -> constant .)
    DIVISION        reduce using rule 27 (term -> constant .)
    MULTIPLY        reduce using rule 27 (term -> constant .)
    EQUAL           reduce using rule 27 (term -> constant .)
    NOT_EQUAL       reduce using rule 27 (term -> constant .)
    LESS_THAN       reduce using rule 27 (term -> constant .)
    MORE_THAN       reduce using rule 27 (term -> constant .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 27 (term -> constant .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 27 (term -> constant .)
    NOT_EQUAL_ALT   reduce using rule 27 (term -> constant .)
    COMMA           reduce using rule 27 (term -> constant .)
    RIGHT_BRACKET   reduce using rule 27 (term -> constant .)
    QUESTION_MARK   reduce using rule 27 (term -> constant .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 27 (term -> constant .)
    DECIMAL         reduce using rule 27 (term -> constant .)
    TILDE           reduce using rule 27 (term -> constant .)


state 20

    (28) term -> IGNORE .

    PLUS            reduce using rule 28 (term -> IGNORE .)
    MINUS           reduce using rule 28 (term -> IGNORE .)
    DIVISION        reduce using rule 28 (term -> IGNORE .)
    MULTIPLY        reduce using rule 28 (term -> IGNORE .)
    EQUAL           reduce using rule 28 (term -> IGNORE .)
    NOT_EQUAL       reduce using rule 28 (term -> IGNORE .)
    LESS_THAN       reduce using rule 28 (term -> IGNORE .)
    MORE_THAN       reduce using rule 28 (term -> IGNORE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 28 (term -> IGNORE .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 28 (term -> IGNORE .)
    NOT_EQUAL_ALT   reduce using rule 28 (term -> IGNORE .)
    COMMA           reduce using rule 28 (term -> IGNORE .)
    RIGHT_BRACKET   reduce using rule 28 (term -> IGNORE .)
    QUESTION_MARK   reduce using rule 28 (term -> IGNORE .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 28 (term -> IGNORE .)
    DECIMAL         reduce using rule 28 (term -> IGNORE .)
    TILDE           reduce using rule 28 (term -> IGNORE .)


state 21

    (31) constant -> DATETIME .

    PLUS            reduce using rule 31 (constant -> DATETIME .)
    MINUS           reduce using rule 31 (constant -> DATETIME .)
    DIVISION        reduce using rule 31 (constant -> DATETIME .)
    MULTIPLY        reduce using rule 31 (constant -> DATETIME .)
    EQUAL           reduce using rule 31 (constant -> DATETIME .)
    NOT_EQUAL       reduce using rule 31 (constant -> DATETIME .)
    LESS_THAN       reduce using rule 31 (constant -> DATETIME .)
    MORE_THAN       reduce using rule 31 (constant -> DATETIME .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 31 (constant -> DATETIME .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 31 (constant -> DATETIME .)
    NOT_EQUAL_ALT   reduce using rule 31 (constant -> DATETIME .)
    COMMA           reduce using rule 31 (constant -> DATETIME .)
    RIGHT_BRACKET   reduce using rule 31 (constant -> DATETIME .)
    QUESTION_MARK   reduce using rule 31 (constant -> DATETIME .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 31 (constant -> DATETIME .)
    DECIMAL         reduce using rule 31 (constant -> DATETIME .)
    TILDE           reduce using rule 31 (constant -> DATETIME .)


state 22

    (32) constant -> INTEGER .

    PLUS            reduce using rule 32 (constant -> INTEGER .)
    MINUS           reduce using rule 32 (constant -> INTEGER .)
    DIVISION        reduce using rule 32 (constant -> INTEGER .)
    MULTIPLY        reduce using rule 32 (constant -> INTEGER .)
    EQUAL           reduce using rule 32 (constant -> INTEGER .)
    NOT_EQUAL       reduce using rule 32 (constant -> INTEGER .)
    LESS_THAN       reduce using rule 32 (constant -> INTEGER .)
    MORE_THAN       reduce using rule 32 (constant -> INTEGER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 32 (constant -> INTEGER .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 32 (constant -> INTEGER .)
    NOT_EQUAL_ALT   reduce using rule 32 (constant -> INTEGER .)
    COMMA           reduce using rule 32 (constant -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 32 (constant -> INTEGER .)
    QUESTION_MARK   reduce using rule 32 (constant -> INTEGER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 32 (constant -> INTEGER .)
    DECIMAL         reduce using rule 32 (constant -> INTEGER .)
    TILDE           reduce using rule 32 (constant -> INTEGER .)


state 23

    (33) constant -> BOOLEAN .

    PLUS            reduce using rule 33 (constant -> BOOLEAN .)
    MINUS           reduce using rule 33 (constant -> BOOLEAN .)
    DIVISION        reduce using rule 33 (constant -> BOOLEAN .)
    MULTIPLY        reduce using rule 33 (constant -> BOOLEAN .)
    EQUAL           reduce using rule 33 (constant -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 33 (constant -> BOOLEAN .)
    LESS_THAN       reduce using rule 33 (constant -> BOOLEAN .)
    MORE_THAN       reduce using rule 33 (constant -> BOOLEAN .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 33 (constant -> BOOLEAN .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 33 (constant -> BOOLEAN .)
    NOT_EQUAL_ALT   reduce using rule 33 (constant -> BOOLEAN .)
    COMMA           reduce using rule 33 (constant -> BOOLEAN .)
    RIGHT_BRACKET   reduce using rule 33 (constant -> BOOLEAN .)
    QUESTION_MARK   reduce using rule 33 (constant -> BOOLEAN .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 33 (constant -> BOOLEAN .)
    DECIMAL         reduce using rule 33 (constant -> BOOLEAN .)
    TILDE           reduce using rule 33 (constant -> BOOLEAN .)


state 24

    (1) program -> statement program .

    $end            reduce using rule 1 (program -> statement program .)


state 25

    (9) assertion -> clause DECIMAL .

    LEFT_BRACKET    reduce using rule 9 (assertion -> clause DECIMAL .)
    VARIABLE        reduce using rule 9 (assertion -> clause DECIMAL .)
    IDENTIFIER      reduce using rule 9 (assertion -> clause DECIMAL .)
    STRING          reduce using rule 9 (assertion -> clause DECIMAL .)
    IGNORE          reduce using rule 9 (assertion -> clause DECIMAL .)
    DATETIME        reduce using rule 9 (assertion -> clause DECIMAL .)
    INTEGER         reduce using rule 9 (assertion -> clause DECIMAL .)
    BOOLEAN         reduce using rule 9 (assertion -> clause DECIMAL .)
    $end            reduce using rule 9 (assertion -> clause DECIMAL .)


state 26

    (10) retraction -> clause TILDE .

    LEFT_BRACKET    reduce using rule 10 (retraction -> clause TILDE .)
    VARIABLE        reduce using rule 10 (retraction -> clause TILDE .)
    IDENTIFIER      reduce using rule 10 (retraction -> clause TILDE .)
    STRING          reduce using rule 10 (retraction -> clause TILDE .)
    IGNORE          reduce using rule 10 (retraction -> clause TILDE .)
    DATETIME        reduce using rule 10 (retraction -> clause TILDE .)
    INTEGER         reduce using rule 10 (retraction -> clause TILDE .)
    BOOLEAN         reduce using rule 10 (retraction -> clause TILDE .)
    $end            reduce using rule 10 (retraction -> clause TILDE .)


state 27

    (11) query -> literal QUESTION_MARK .

    LEFT_BRACKET    reduce using rule 11 (query -> literal QUESTION_MARK .)
    VARIABLE        reduce using rule 11 (query -> literal QUESTION_MARK .)
    IDENTIFIER      reduce using rule 11 (query -> literal QUESTION_MARK .)
    STRING          reduce using rule 11 (query -> literal QUESTION_MARK .)
    IGNORE          reduce using rule 11 (query -> literal QUESTION_MARK .)
    DATETIME        reduce using rule 11 (query -> literal QUESTION_MARK .)
    INTEGER         reduce using rule 11 (query -> literal QUESTION_MARK .)
    BOOLEAN         reduce using rule 11 (query -> literal QUESTION_MARK .)
    $end            reduce using rule 11 (query -> literal QUESTION_MARK .)


state 28

    (13) clause -> literal HEAD_AND_BODY_SEPARATOR . body
    (15) body -> . literal COMMA body
    (16) body -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (34) comparison -> . comparisonterms EQUAL comparisonterms
    (35) comparison -> . comparisonterms NOT_EQUAL comparisonterms
    (36) comparison -> . comparisonterms LESS_THAN comparisonterms
    (37) comparison -> . comparisonterms MORE_THAN comparisonterms
    (38) comparison -> . comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms
    (39) comparison -> . comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms
    (40) comparison -> . comparisonterms NOT_EQUAL_ALT comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 20
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    literal                        shift and go to state 43
    body                           shift and go to state 44
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterms                shift and go to state 16
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 29

    (12) requirement -> LEFT_BRACKET IDENTIFIER . RIGHT_BRACKET DECIMAL

    RIGHT_BRACKET   shift and go to state 45


state 30

    (17) literal -> predicate LEFT_BRACKET . RIGHT_BRACKET
    (18) literal -> predicate LEFT_BRACKET . terms RIGHT_BRACKET
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    RIGHT_BRACKET   shift and go to state 46
    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    terms                          shift and go to state 47
    term                           shift and go to state 48
    constant                       shift and go to state 19

state 31

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR . IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET

    IDENTIFIER      shift and go to state 52


state 32

    (34) comparison -> comparisonterms EQUAL . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterms                shift and go to state 53
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 33

    (35) comparison -> comparisonterms NOT_EQUAL . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterms                shift and go to state 54
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 34

    (36) comparison -> comparisonterms LESS_THAN . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterms                shift and go to state 55
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 35

    (37) comparison -> comparisonterms MORE_THAN . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterms                shift and go to state 56
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 36

    (38) comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterms                shift and go to state 57
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 37

    (39) comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterms                shift and go to state 58
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 38

    (40) comparison -> comparisonterms NOT_EQUAL_ALT . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterms                shift and go to state 59
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 39

    (42) comparisonterms -> comparisonterm PLUS . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterm                 shift and go to state 17
    comparisonterms                shift and go to state 60
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 40

    (43) comparisonterms -> comparisonterm MINUS . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterm                 shift and go to state 17
    comparisonterms                shift and go to state 61
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 41

    (44) comparisonterms -> comparisonterm DIVISION . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterm                 shift and go to state 17
    comparisonterms                shift and go to state 62
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 42

    (45) comparisonterms -> comparisonterm MULTIPLY . comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    comparisonterm                 shift and go to state 17
    comparisonterms                shift and go to state 63
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 43

    (15) body -> literal . COMMA body
    (16) body -> literal .

    COMMA           shift and go to state 64
    DECIMAL         reduce using rule 16 (body -> literal .)
    TILDE           reduce using rule 16 (body -> literal .)


state 44

    (13) clause -> literal HEAD_AND_BODY_SEPARATOR body .

    DECIMAL         reduce using rule 13 (clause -> literal HEAD_AND_BODY_SEPARATOR body .)
    TILDE           reduce using rule 13 (clause -> literal HEAD_AND_BODY_SEPARATOR body .)


state 45

    (12) requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET . DECIMAL

    DECIMAL         shift and go to state 65


state 46

    (17) literal -> predicate LEFT_BRACKET RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    DECIMAL         reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    TILDE           reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    COMMA           reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)


state 47

    (18) literal -> predicate LEFT_BRACKET terms . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 66


state 48

    (24) terms -> term . COMMA terms
    (25) terms -> term .

    COMMA           shift and go to state 67
    RIGHT_BRACKET   reduce using rule 25 (terms -> term .)


state 49

    (26) term -> VARIABLE .

    COMMA           reduce using rule 26 (term -> VARIABLE .)
    RIGHT_BRACKET   reduce using rule 26 (term -> VARIABLE .)
    PLUS            reduce using rule 26 (term -> VARIABLE .)
    MINUS           reduce using rule 26 (term -> VARIABLE .)
    DIVISION        reduce using rule 26 (term -> VARIABLE .)
    MULTIPLY        reduce using rule 26 (term -> VARIABLE .)
    QUESTION_MARK   reduce using rule 26 (term -> VARIABLE .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 26 (term -> VARIABLE .)
    DECIMAL         reduce using rule 26 (term -> VARIABLE .)
    TILDE           reduce using rule 26 (term -> VARIABLE .)
    EQUAL           reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN       reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL_ALT   reduce using rule 26 (term -> VARIABLE .)


state 50

    (29) constant -> IDENTIFIER .

    COMMA           reduce using rule 29 (constant -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 29 (constant -> IDENTIFIER .)
    PLUS            reduce using rule 29 (constant -> IDENTIFIER .)
    MINUS           reduce using rule 29 (constant -> IDENTIFIER .)
    DIVISION        reduce using rule 29 (constant -> IDENTIFIER .)
    MULTIPLY        reduce using rule 29 (constant -> IDENTIFIER .)
    QUESTION_MARK   reduce using rule 29 (constant -> IDENTIFIER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 29 (constant -> IDENTIFIER .)
    DECIMAL         reduce using rule 29 (constant -> IDENTIFIER .)
    TILDE           reduce using rule 29 (constant -> IDENTIFIER .)
    EQUAL           reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL_ALT   reduce using rule 29 (constant -> IDENTIFIER .)


state 51

    (30) constant -> STRING .

    COMMA           reduce using rule 30 (constant -> STRING .)
    RIGHT_BRACKET   reduce using rule 30 (constant -> STRING .)
    PLUS            reduce using rule 30 (constant -> STRING .)
    MINUS           reduce using rule 30 (constant -> STRING .)
    DIVISION        reduce using rule 30 (constant -> STRING .)
    MULTIPLY        reduce using rule 30 (constant -> STRING .)
    QUESTION_MARK   reduce using rule 30 (constant -> STRING .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 30 (constant -> STRING .)
    DECIMAL         reduce using rule 30 (constant -> STRING .)
    TILDE           reduce using rule 30 (constant -> STRING .)
    EQUAL           reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL       reduce using rule 30 (constant -> STRING .)
    LESS_THAN       reduce using rule 30 (constant -> STRING .)
    MORE_THAN       reduce using rule 30 (constant -> STRING .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL_ALT   reduce using rule 30 (constant -> STRING .)


state 52

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER . LEFT_BRACKET terms RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 68


state 53

    (34) comparison -> comparisonterms EQUAL comparisonterms .

    QUESTION_MARK   reduce using rule 34 (comparison -> comparisonterms EQUAL comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 34 (comparison -> comparisonterms EQUAL comparisonterms .)
    DECIMAL         reduce using rule 34 (comparison -> comparisonterms EQUAL comparisonterms .)
    TILDE           reduce using rule 34 (comparison -> comparisonterms EQUAL comparisonterms .)
    COMMA           reduce using rule 34 (comparison -> comparisonterms EQUAL comparisonterms .)


state 54

    (35) comparison -> comparisonterms NOT_EQUAL comparisonterms .

    QUESTION_MARK   reduce using rule 35 (comparison -> comparisonterms NOT_EQUAL comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 35 (comparison -> comparisonterms NOT_EQUAL comparisonterms .)
    DECIMAL         reduce using rule 35 (comparison -> comparisonterms NOT_EQUAL comparisonterms .)
    TILDE           reduce using rule 35 (comparison -> comparisonterms NOT_EQUAL comparisonterms .)
    COMMA           reduce using rule 35 (comparison -> comparisonterms NOT_EQUAL comparisonterms .)


state 55

    (36) comparison -> comparisonterms LESS_THAN comparisonterms .

    QUESTION_MARK   reduce using rule 36 (comparison -> comparisonterms LESS_THAN comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 36 (comparison -> comparisonterms LESS_THAN comparisonterms .)
    DECIMAL         reduce using rule 36 (comparison -> comparisonterms LESS_THAN comparisonterms .)
    TILDE           reduce using rule 36 (comparison -> comparisonterms LESS_THAN comparisonterms .)
    COMMA           reduce using rule 36 (comparison -> comparisonterms LESS_THAN comparisonterms .)


state 56

    (37) comparison -> comparisonterms MORE_THAN comparisonterms .

    QUESTION_MARK   reduce using rule 37 (comparison -> comparisonterms MORE_THAN comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 37 (comparison -> comparisonterms MORE_THAN comparisonterms .)
    DECIMAL         reduce using rule 37 (comparison -> comparisonterms MORE_THAN comparisonterms .)
    TILDE           reduce using rule 37 (comparison -> comparisonterms MORE_THAN comparisonterms .)
    COMMA           reduce using rule 37 (comparison -> comparisonterms MORE_THAN comparisonterms .)


state 57

    (38) comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms .

    QUESTION_MARK   reduce using rule 38 (comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 38 (comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms .)
    DECIMAL         reduce using rule 38 (comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms .)
    TILDE           reduce using rule 38 (comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms .)
    COMMA           reduce using rule 38 (comparison -> comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms .)


state 58

    (39) comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms .

    QUESTION_MARK   reduce using rule 39 (comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 39 (comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms .)
    DECIMAL         reduce using rule 39 (comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms .)
    TILDE           reduce using rule 39 (comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms .)
    COMMA           reduce using rule 39 (comparison -> comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms .)


state 59

    (40) comparison -> comparisonterms NOT_EQUAL_ALT comparisonterms .

    QUESTION_MARK   reduce using rule 40 (comparison -> comparisonterms NOT_EQUAL_ALT comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 40 (comparison -> comparisonterms NOT_EQUAL_ALT comparisonterms .)
    DECIMAL         reduce using rule 40 (comparison -> comparisonterms NOT_EQUAL_ALT comparisonterms .)
    TILDE           reduce using rule 40 (comparison -> comparisonterms NOT_EQUAL_ALT comparisonterms .)
    COMMA           reduce using rule 40 (comparison -> comparisonterms NOT_EQUAL_ALT comparisonterms .)


state 60

    (42) comparisonterms -> comparisonterm PLUS comparisonterms .

    EQUAL           reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    NOT_EQUAL       reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    LESS_THAN       reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    MORE_THAN       reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    NOT_EQUAL_ALT   reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    QUESTION_MARK   reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    DECIMAL         reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    TILDE           reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)
    COMMA           reduce using rule 42 (comparisonterms -> comparisonterm PLUS comparisonterms .)


state 61

    (43) comparisonterms -> comparisonterm MINUS comparisonterms .

    EQUAL           reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    NOT_EQUAL       reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    LESS_THAN       reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    MORE_THAN       reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    NOT_EQUAL_ALT   reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    QUESTION_MARK   reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    DECIMAL         reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    TILDE           reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)
    COMMA           reduce using rule 43 (comparisonterms -> comparisonterm MINUS comparisonterms .)


state 62

    (44) comparisonterms -> comparisonterm DIVISION comparisonterms .

    EQUAL           reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    NOT_EQUAL       reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    LESS_THAN       reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    MORE_THAN       reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    NOT_EQUAL_ALT   reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    QUESTION_MARK   reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    DECIMAL         reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    TILDE           reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)
    COMMA           reduce using rule 44 (comparisonterms -> comparisonterm DIVISION comparisonterms .)


state 63

    (45) comparisonterms -> comparisonterm MULTIPLY comparisonterms .

    EQUAL           reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    NOT_EQUAL       reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    LESS_THAN       reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    MORE_THAN       reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    NOT_EQUAL_ALT   reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    QUESTION_MARK   reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    DECIMAL         reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    TILDE           reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)
    COMMA           reduce using rule 45 (comparisonterms -> comparisonterm MULTIPLY comparisonterms .)


state 64

    (15) body -> literal COMMA . body
    (15) body -> . literal COMMA body
    (16) body -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (34) comparison -> . comparisonterms EQUAL comparisonterms
    (35) comparison -> . comparisonterms NOT_EQUAL comparisonterms
    (36) comparison -> . comparisonterms LESS_THAN comparisonterms
    (37) comparison -> . comparisonterms MORE_THAN comparisonterms
    (38) comparison -> . comparisonterms LESS_THAN_OR_EQUAL_TO comparisonterms
    (39) comparison -> . comparisonterms MORE_THAN_OR_EQUAL_TO comparisonterms
    (40) comparison -> . comparisonterms NOT_EQUAL_ALT comparisonterms
    (41) comparisonterms -> . comparisonterm
    (42) comparisonterms -> . comparisonterm PLUS comparisonterms
    (43) comparisonterms -> . comparisonterm MINUS comparisonterms
    (44) comparisonterms -> . comparisonterm DIVISION comparisonterms
    (45) comparisonterms -> . comparisonterm MULTIPLY comparisonterms
    (46) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 20
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    literal                        shift and go to state 43
    body                           shift and go to state 69
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterms                shift and go to state 16
    comparisonterm                 shift and go to state 17
    term                           shift and go to state 18
    constant                       shift and go to state 19

state 65

    (12) requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .

    LEFT_BRACKET    reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    VARIABLE        reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    IDENTIFIER      reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    STRING          reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    IGNORE          reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    DATETIME        reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    INTEGER         reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    BOOLEAN         reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    $end            reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)


state 66

    (18) literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    DECIMAL         reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    TILDE           reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    COMMA           reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)


state 67

    (24) terms -> term COMMA . terms
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    term                           shift and go to state 48
    terms                          shift and go to state 70
    constant                       shift and go to state 19

state 68

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET . terms RIGHT_BRACKET
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . DATETIME
    (32) constant -> . INTEGER
    (33) constant -> . BOOLEAN

    VARIABLE        shift and go to state 49
    IGNORE          shift and go to state 20
    IDENTIFIER      shift and go to state 50
    STRING          shift and go to state 51
    DATETIME        shift and go to state 21
    INTEGER         shift and go to state 22
    BOOLEAN         shift and go to state 23

    terms                          shift and go to state 71
    term                           shift and go to state 48
    constant                       shift and go to state 19

state 69

    (15) body -> literal COMMA body .

    DECIMAL         reduce using rule 15 (body -> literal COMMA body .)
    TILDE           reduce using rule 15 (body -> literal COMMA body .)


state 70

    (24) terms -> term COMMA terms .

    RIGHT_BRACKET   reduce using rule 24 (terms -> term COMMA terms .)


state 71

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 72


state 72

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    DECIMAL         reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    TILDE           reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    COMMA           reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> statement)
WARNING: rejected rule (empty -> <empty>) in state 2
