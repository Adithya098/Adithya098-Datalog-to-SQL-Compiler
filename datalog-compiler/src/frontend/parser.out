Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement program
Rule 2     program -> statement
Rule 3     program -> empty
Rule 4     empty -> <empty>
Rule 5     statement -> assertion
Rule 6     statement -> retraction
Rule 7     statement -> query
Rule 8     statement -> requirement
Rule 9     assertion -> clause DECIMAL
Rule 10    retraction -> clause TILDE
Rule 11    query -> literal QUESTION_MARK
Rule 12    requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
Rule 13    clause -> literal HEAD_AND_BODY_SEPARATOR body
Rule 14    clause -> literal
Rule 15    body -> literal COMMA body
Rule 16    body -> literal
Rule 17    literal -> predicate LEFT_BRACKET RIGHT_BRACKET
Rule 18    literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET
Rule 19    literal -> predicate
Rule 20    literal -> comparison
Rule 21    literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
Rule 22    predicate -> IDENTIFIER
Rule 23    predicate -> STRING
Rule 24    terms -> term COMMA terms
Rule 25    terms -> term
Rule 26    term -> VARIABLE
Rule 27    term -> constant
Rule 28    term -> IGNORE
Rule 29    constant -> IDENTIFIER
Rule 30    constant -> STRING
Rule 31    constant -> INTEGER
Rule 32    constant -> BOOLEAN
Rule 33    comparison -> term EQUAL term
Rule 34    comparison -> term NOT_EQUAL term
Rule 35    comparison -> term LESS_THAN term
Rule 36    comparison -> term MORE_THAN term
Rule 37    comparison -> term LESS_THAN_OR_EQUAL_TO term
Rule 38    comparison -> term MORE_THAN_OR_EQUAL_TO term
Rule 39    comparison -> term NOT_EQUAL_ALT term

Terminals, with rules where they appear

BOOLEAN              : 32
COMMA                : 15 24
COMMENT              : 
DECIMAL              : 9 12
EQUAL                : 33
HEAD_AND_BODY_SEPARATOR : 13 21
IDENTIFIER           : 12 21 22 29
IGNORE               : 28
INTEGER              : 31
LEFT_BRACKET         : 12 17 18 21
LESS_THAN            : 35
LESS_THAN_OR_EQUAL_TO : 37
MORE_THAN            : 36
MORE_THAN_OR_EQUAL_TO : 38
NOT_EQUAL            : 34
NOT_EQUAL_ALT        : 39
QUESTION_MARK        : 11
RIGHT_BRACKET        : 12 17 18 21
STRING               : 23 30
TILDE                : 10
VARIABLE             : 21 26
error                : 

Nonterminals, with rules where they appear

assertion            : 5
body                 : 13 15
clause               : 9 10
comparison           : 20
constant             : 27
empty                : 3
literal              : 11 13 14 15 16
predicate            : 17 18 19
program              : 1 0
query                : 7
requirement          : 8
retraction           : 6
statement            : 1 2
term                 : 24 25 33 33 34 34 35 35 36 36 37 37 38 38 39 39
terms                : 18 21 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement program
    (2) program -> . statement
    (3) program -> . empty
    (5) statement -> . assertion
    (6) statement -> . retraction
    (7) statement -> . query
    (8) statement -> . requirement
    (4) empty -> .
    (9) assertion -> . clause DECIMAL
    (10) retraction -> . clause TILDE
    (11) query -> . literal QUESTION_MARK
    (12) requirement -> . LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
    (13) clause -> . literal HEAD_AND_BODY_SEPARATOR body
    (14) clause -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . term EQUAL term
    (34) comparison -> . term NOT_EQUAL term
    (35) comparison -> . term LESS_THAN term
    (36) comparison -> . term MORE_THAN term
    (37) comparison -> . term LESS_THAN_OR_EQUAL_TO term
    (38) comparison -> . term MORE_THAN_OR_EQUAL_TO term
    (39) comparison -> . term NOT_EQUAL_ALT term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    $end            reduce using rule 4 (empty -> .)
    LEFT_BRACKET    shift and go to state 10
    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 18
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    program                        shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    assertion                      shift and go to state 4
    retraction                     shift and go to state 5
    query                          shift and go to state 6
    requirement                    shift and go to state 7
    clause                         shift and go to state 8
    literal                        shift and go to state 9
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    term                           shift and go to state 16
    constant                       shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statement . program
    (2) program -> statement .
    (1) program -> . statement program
    (2) program -> . statement
    (3) program -> . empty
    (5) statement -> . assertion
    (6) statement -> . retraction
    (7) statement -> . query
    (8) statement -> . requirement
    (4) empty -> .
    (9) assertion -> . clause DECIMAL
    (10) retraction -> . clause TILDE
    (11) query -> . literal QUESTION_MARK
    (12) requirement -> . LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
    (13) clause -> . literal HEAD_AND_BODY_SEPARATOR body
    (14) clause -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . term EQUAL term
    (34) comparison -> . term NOT_EQUAL term
    (35) comparison -> . term LESS_THAN term
    (36) comparison -> . term MORE_THAN term
    (37) comparison -> . term LESS_THAN_OR_EQUAL_TO term
    (38) comparison -> . term MORE_THAN_OR_EQUAL_TO term
    (39) comparison -> . term NOT_EQUAL_ALT term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

  ! reduce/reduce conflict for $end resolved using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    LEFT_BRACKET    shift and go to state 10
    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 18
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

  ! $end            [ reduce using rule 4 (empty -> .) ]

    statement                      shift and go to state 2
    program                        shift and go to state 21
    empty                          shift and go to state 3
    assertion                      shift and go to state 4
    retraction                     shift and go to state 5
    query                          shift and go to state 6
    requirement                    shift and go to state 7
    clause                         shift and go to state 8
    literal                        shift and go to state 9
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    term                           shift and go to state 16
    constant                       shift and go to state 17

state 3

    (3) program -> empty .

    $end            reduce using rule 3 (program -> empty .)


state 4

    (5) statement -> assertion .

    LEFT_BRACKET    reduce using rule 5 (statement -> assertion .)
    VARIABLE        reduce using rule 5 (statement -> assertion .)
    IDENTIFIER      reduce using rule 5 (statement -> assertion .)
    STRING          reduce using rule 5 (statement -> assertion .)
    IGNORE          reduce using rule 5 (statement -> assertion .)
    INTEGER         reduce using rule 5 (statement -> assertion .)
    BOOLEAN         reduce using rule 5 (statement -> assertion .)
    $end            reduce using rule 5 (statement -> assertion .)


state 5

    (6) statement -> retraction .

    LEFT_BRACKET    reduce using rule 6 (statement -> retraction .)
    VARIABLE        reduce using rule 6 (statement -> retraction .)
    IDENTIFIER      reduce using rule 6 (statement -> retraction .)
    STRING          reduce using rule 6 (statement -> retraction .)
    IGNORE          reduce using rule 6 (statement -> retraction .)
    INTEGER         reduce using rule 6 (statement -> retraction .)
    BOOLEAN         reduce using rule 6 (statement -> retraction .)
    $end            reduce using rule 6 (statement -> retraction .)


state 6

    (7) statement -> query .

    LEFT_BRACKET    reduce using rule 7 (statement -> query .)
    VARIABLE        reduce using rule 7 (statement -> query .)
    IDENTIFIER      reduce using rule 7 (statement -> query .)
    STRING          reduce using rule 7 (statement -> query .)
    IGNORE          reduce using rule 7 (statement -> query .)
    INTEGER         reduce using rule 7 (statement -> query .)
    BOOLEAN         reduce using rule 7 (statement -> query .)
    $end            reduce using rule 7 (statement -> query .)


state 7

    (8) statement -> requirement .

    LEFT_BRACKET    reduce using rule 8 (statement -> requirement .)
    VARIABLE        reduce using rule 8 (statement -> requirement .)
    IDENTIFIER      reduce using rule 8 (statement -> requirement .)
    STRING          reduce using rule 8 (statement -> requirement .)
    IGNORE          reduce using rule 8 (statement -> requirement .)
    INTEGER         reduce using rule 8 (statement -> requirement .)
    BOOLEAN         reduce using rule 8 (statement -> requirement .)
    $end            reduce using rule 8 (statement -> requirement .)


state 8

    (9) assertion -> clause . DECIMAL
    (10) retraction -> clause . TILDE

    DECIMAL         shift and go to state 22
    TILDE           shift and go to state 23


state 9

    (11) query -> literal . QUESTION_MARK
    (13) clause -> literal . HEAD_AND_BODY_SEPARATOR body
    (14) clause -> literal .

    QUESTION_MARK   shift and go to state 24
    HEAD_AND_BODY_SEPARATOR shift and go to state 25
    DECIMAL         reduce using rule 14 (clause -> literal .)
    TILDE           reduce using rule 14 (clause -> literal .)


state 10

    (12) requirement -> LEFT_BRACKET . IDENTIFIER RIGHT_BRACKET DECIMAL

    IDENTIFIER      shift and go to state 26


state 11

    (22) predicate -> IDENTIFIER .
    (29) constant -> IDENTIFIER .

    LEFT_BRACKET    reduce using rule 22 (predicate -> IDENTIFIER .)
    QUESTION_MARK   reduce using rule 22 (predicate -> IDENTIFIER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 22 (predicate -> IDENTIFIER .)
    DECIMAL         reduce using rule 22 (predicate -> IDENTIFIER .)
    TILDE           reduce using rule 22 (predicate -> IDENTIFIER .)
    COMMA           reduce using rule 22 (predicate -> IDENTIFIER .)
    EQUAL           reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL_ALT   reduce using rule 29 (constant -> IDENTIFIER .)


state 12

    (17) literal -> predicate . LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> predicate . LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> predicate .

    LEFT_BRACKET    shift and go to state 27
    QUESTION_MARK   reduce using rule 19 (literal -> predicate .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 19 (literal -> predicate .)
    DECIMAL         reduce using rule 19 (literal -> predicate .)
    TILDE           reduce using rule 19 (literal -> predicate .)
    COMMA           reduce using rule 19 (literal -> predicate .)


state 13

    (20) literal -> comparison .

    QUESTION_MARK   reduce using rule 20 (literal -> comparison .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 20 (literal -> comparison .)
    DECIMAL         reduce using rule 20 (literal -> comparison .)
    TILDE           reduce using rule 20 (literal -> comparison .)
    COMMA           reduce using rule 20 (literal -> comparison .)


state 14

    (21) literal -> VARIABLE . HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (26) term -> VARIABLE .

    HEAD_AND_BODY_SEPARATOR shift and go to state 28
    EQUAL           reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN       reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL_ALT   reduce using rule 26 (term -> VARIABLE .)


state 15

    (23) predicate -> STRING .
    (30) constant -> STRING .

    LEFT_BRACKET    reduce using rule 23 (predicate -> STRING .)
    QUESTION_MARK   reduce using rule 23 (predicate -> STRING .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 23 (predicate -> STRING .)
    DECIMAL         reduce using rule 23 (predicate -> STRING .)
    TILDE           reduce using rule 23 (predicate -> STRING .)
    COMMA           reduce using rule 23 (predicate -> STRING .)
    EQUAL           reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL       reduce using rule 30 (constant -> STRING .)
    LESS_THAN       reduce using rule 30 (constant -> STRING .)
    MORE_THAN       reduce using rule 30 (constant -> STRING .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL_ALT   reduce using rule 30 (constant -> STRING .)


state 16

    (33) comparison -> term . EQUAL term
    (34) comparison -> term . NOT_EQUAL term
    (35) comparison -> term . LESS_THAN term
    (36) comparison -> term . MORE_THAN term
    (37) comparison -> term . LESS_THAN_OR_EQUAL_TO term
    (38) comparison -> term . MORE_THAN_OR_EQUAL_TO term
    (39) comparison -> term . NOT_EQUAL_ALT term

    EQUAL           shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    LESS_THAN       shift and go to state 31
    MORE_THAN       shift and go to state 32
    LESS_THAN_OR_EQUAL_TO shift and go to state 33
    MORE_THAN_OR_EQUAL_TO shift and go to state 34
    NOT_EQUAL_ALT   shift and go to state 35


state 17

    (27) term -> constant .

    EQUAL           reduce using rule 27 (term -> constant .)
    NOT_EQUAL       reduce using rule 27 (term -> constant .)
    LESS_THAN       reduce using rule 27 (term -> constant .)
    MORE_THAN       reduce using rule 27 (term -> constant .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 27 (term -> constant .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 27 (term -> constant .)
    NOT_EQUAL_ALT   reduce using rule 27 (term -> constant .)
    COMMA           reduce using rule 27 (term -> constant .)
    RIGHT_BRACKET   reduce using rule 27 (term -> constant .)
    QUESTION_MARK   reduce using rule 27 (term -> constant .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 27 (term -> constant .)
    DECIMAL         reduce using rule 27 (term -> constant .)
    TILDE           reduce using rule 27 (term -> constant .)


state 18

    (28) term -> IGNORE .

    EQUAL           reduce using rule 28 (term -> IGNORE .)
    NOT_EQUAL       reduce using rule 28 (term -> IGNORE .)
    LESS_THAN       reduce using rule 28 (term -> IGNORE .)
    MORE_THAN       reduce using rule 28 (term -> IGNORE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 28 (term -> IGNORE .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 28 (term -> IGNORE .)
    NOT_EQUAL_ALT   reduce using rule 28 (term -> IGNORE .)
    COMMA           reduce using rule 28 (term -> IGNORE .)
    RIGHT_BRACKET   reduce using rule 28 (term -> IGNORE .)
    QUESTION_MARK   reduce using rule 28 (term -> IGNORE .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 28 (term -> IGNORE .)
    DECIMAL         reduce using rule 28 (term -> IGNORE .)
    TILDE           reduce using rule 28 (term -> IGNORE .)


state 19

    (31) constant -> INTEGER .

    EQUAL           reduce using rule 31 (constant -> INTEGER .)
    NOT_EQUAL       reduce using rule 31 (constant -> INTEGER .)
    LESS_THAN       reduce using rule 31 (constant -> INTEGER .)
    MORE_THAN       reduce using rule 31 (constant -> INTEGER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 31 (constant -> INTEGER .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 31 (constant -> INTEGER .)
    NOT_EQUAL_ALT   reduce using rule 31 (constant -> INTEGER .)
    COMMA           reduce using rule 31 (constant -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 31 (constant -> INTEGER .)
    QUESTION_MARK   reduce using rule 31 (constant -> INTEGER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 31 (constant -> INTEGER .)
    DECIMAL         reduce using rule 31 (constant -> INTEGER .)
    TILDE           reduce using rule 31 (constant -> INTEGER .)


state 20

    (32) constant -> BOOLEAN .

    EQUAL           reduce using rule 32 (constant -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 32 (constant -> BOOLEAN .)
    LESS_THAN       reduce using rule 32 (constant -> BOOLEAN .)
    MORE_THAN       reduce using rule 32 (constant -> BOOLEAN .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 32 (constant -> BOOLEAN .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 32 (constant -> BOOLEAN .)
    NOT_EQUAL_ALT   reduce using rule 32 (constant -> BOOLEAN .)
    COMMA           reduce using rule 32 (constant -> BOOLEAN .)
    RIGHT_BRACKET   reduce using rule 32 (constant -> BOOLEAN .)
    QUESTION_MARK   reduce using rule 32 (constant -> BOOLEAN .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 32 (constant -> BOOLEAN .)
    DECIMAL         reduce using rule 32 (constant -> BOOLEAN .)
    TILDE           reduce using rule 32 (constant -> BOOLEAN .)


state 21

    (1) program -> statement program .

    $end            reduce using rule 1 (program -> statement program .)


state 22

    (9) assertion -> clause DECIMAL .

    LEFT_BRACKET    reduce using rule 9 (assertion -> clause DECIMAL .)
    VARIABLE        reduce using rule 9 (assertion -> clause DECIMAL .)
    IDENTIFIER      reduce using rule 9 (assertion -> clause DECIMAL .)
    STRING          reduce using rule 9 (assertion -> clause DECIMAL .)
    IGNORE          reduce using rule 9 (assertion -> clause DECIMAL .)
    INTEGER         reduce using rule 9 (assertion -> clause DECIMAL .)
    BOOLEAN         reduce using rule 9 (assertion -> clause DECIMAL .)
    $end            reduce using rule 9 (assertion -> clause DECIMAL .)


state 23

    (10) retraction -> clause TILDE .

    LEFT_BRACKET    reduce using rule 10 (retraction -> clause TILDE .)
    VARIABLE        reduce using rule 10 (retraction -> clause TILDE .)
    IDENTIFIER      reduce using rule 10 (retraction -> clause TILDE .)
    STRING          reduce using rule 10 (retraction -> clause TILDE .)
    IGNORE          reduce using rule 10 (retraction -> clause TILDE .)
    INTEGER         reduce using rule 10 (retraction -> clause TILDE .)
    BOOLEAN         reduce using rule 10 (retraction -> clause TILDE .)
    $end            reduce using rule 10 (retraction -> clause TILDE .)


state 24

    (11) query -> literal QUESTION_MARK .

    LEFT_BRACKET    reduce using rule 11 (query -> literal QUESTION_MARK .)
    VARIABLE        reduce using rule 11 (query -> literal QUESTION_MARK .)
    IDENTIFIER      reduce using rule 11 (query -> literal QUESTION_MARK .)
    STRING          reduce using rule 11 (query -> literal QUESTION_MARK .)
    IGNORE          reduce using rule 11 (query -> literal QUESTION_MARK .)
    INTEGER         reduce using rule 11 (query -> literal QUESTION_MARK .)
    BOOLEAN         reduce using rule 11 (query -> literal QUESTION_MARK .)
    $end            reduce using rule 11 (query -> literal QUESTION_MARK .)


state 25

    (13) clause -> literal HEAD_AND_BODY_SEPARATOR . body
    (15) body -> . literal COMMA body
    (16) body -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . term EQUAL term
    (34) comparison -> . term NOT_EQUAL term
    (35) comparison -> . term LESS_THAN term
    (36) comparison -> . term MORE_THAN term
    (37) comparison -> . term LESS_THAN_OR_EQUAL_TO term
    (38) comparison -> . term MORE_THAN_OR_EQUAL_TO term
    (39) comparison -> . term NOT_EQUAL_ALT term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 18
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    literal                        shift and go to state 36
    body                           shift and go to state 37
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    term                           shift and go to state 16
    constant                       shift and go to state 17

state 26

    (12) requirement -> LEFT_BRACKET IDENTIFIER . RIGHT_BRACKET DECIMAL

    RIGHT_BRACKET   shift and go to state 38


state 27

    (17) literal -> predicate LEFT_BRACKET . RIGHT_BRACKET
    (18) literal -> predicate LEFT_BRACKET . terms RIGHT_BRACKET
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    RIGHT_BRACKET   shift and go to state 39
    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    terms                          shift and go to state 40
    term                           shift and go to state 41
    constant                       shift and go to state 17

state 28

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR . IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET

    IDENTIFIER      shift and go to state 45


state 29

    (33) comparison -> term EQUAL . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 46
    constant                       shift and go to state 17

state 30

    (34) comparison -> term NOT_EQUAL . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 47
    constant                       shift and go to state 17

state 31

    (35) comparison -> term LESS_THAN . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 48
    constant                       shift and go to state 17

state 32

    (36) comparison -> term MORE_THAN . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 49
    constant                       shift and go to state 17

state 33

    (37) comparison -> term LESS_THAN_OR_EQUAL_TO . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 50
    constant                       shift and go to state 17

state 34

    (38) comparison -> term MORE_THAN_OR_EQUAL_TO . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 51
    constant                       shift and go to state 17

state 35

    (39) comparison -> term NOT_EQUAL_ALT . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 52
    constant                       shift and go to state 17

state 36

    (15) body -> literal . COMMA body
    (16) body -> literal .

    COMMA           shift and go to state 53
    DECIMAL         reduce using rule 16 (body -> literal .)
    TILDE           reduce using rule 16 (body -> literal .)


state 37

    (13) clause -> literal HEAD_AND_BODY_SEPARATOR body .

    DECIMAL         reduce using rule 13 (clause -> literal HEAD_AND_BODY_SEPARATOR body .)
    TILDE           reduce using rule 13 (clause -> literal HEAD_AND_BODY_SEPARATOR body .)


state 38

    (12) requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET . DECIMAL

    DECIMAL         shift and go to state 54


state 39

    (17) literal -> predicate LEFT_BRACKET RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    DECIMAL         reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    TILDE           reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    COMMA           reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)


state 40

    (18) literal -> predicate LEFT_BRACKET terms . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 55


state 41

    (24) terms -> term . COMMA terms
    (25) terms -> term .

    COMMA           shift and go to state 56
    RIGHT_BRACKET   reduce using rule 25 (terms -> term .)


state 42

    (26) term -> VARIABLE .

    COMMA           reduce using rule 26 (term -> VARIABLE .)
    RIGHT_BRACKET   reduce using rule 26 (term -> VARIABLE .)
    QUESTION_MARK   reduce using rule 26 (term -> VARIABLE .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 26 (term -> VARIABLE .)
    DECIMAL         reduce using rule 26 (term -> VARIABLE .)
    TILDE           reduce using rule 26 (term -> VARIABLE .)


state 43

    (29) constant -> IDENTIFIER .

    COMMA           reduce using rule 29 (constant -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 29 (constant -> IDENTIFIER .)
    QUESTION_MARK   reduce using rule 29 (constant -> IDENTIFIER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 29 (constant -> IDENTIFIER .)
    DECIMAL         reduce using rule 29 (constant -> IDENTIFIER .)
    TILDE           reduce using rule 29 (constant -> IDENTIFIER .)


state 44

    (30) constant -> STRING .

    COMMA           reduce using rule 30 (constant -> STRING .)
    RIGHT_BRACKET   reduce using rule 30 (constant -> STRING .)
    QUESTION_MARK   reduce using rule 30 (constant -> STRING .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 30 (constant -> STRING .)
    DECIMAL         reduce using rule 30 (constant -> STRING .)
    TILDE           reduce using rule 30 (constant -> STRING .)


state 45

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER . LEFT_BRACKET terms RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 57


state 46

    (33) comparison -> term EQUAL term .

    QUESTION_MARK   reduce using rule 33 (comparison -> term EQUAL term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 33 (comparison -> term EQUAL term .)
    DECIMAL         reduce using rule 33 (comparison -> term EQUAL term .)
    TILDE           reduce using rule 33 (comparison -> term EQUAL term .)
    COMMA           reduce using rule 33 (comparison -> term EQUAL term .)


state 47

    (34) comparison -> term NOT_EQUAL term .

    QUESTION_MARK   reduce using rule 34 (comparison -> term NOT_EQUAL term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 34 (comparison -> term NOT_EQUAL term .)
    DECIMAL         reduce using rule 34 (comparison -> term NOT_EQUAL term .)
    TILDE           reduce using rule 34 (comparison -> term NOT_EQUAL term .)
    COMMA           reduce using rule 34 (comparison -> term NOT_EQUAL term .)


state 48

    (35) comparison -> term LESS_THAN term .

    QUESTION_MARK   reduce using rule 35 (comparison -> term LESS_THAN term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 35 (comparison -> term LESS_THAN term .)
    DECIMAL         reduce using rule 35 (comparison -> term LESS_THAN term .)
    TILDE           reduce using rule 35 (comparison -> term LESS_THAN term .)
    COMMA           reduce using rule 35 (comparison -> term LESS_THAN term .)


state 49

    (36) comparison -> term MORE_THAN term .

    QUESTION_MARK   reduce using rule 36 (comparison -> term MORE_THAN term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 36 (comparison -> term MORE_THAN term .)
    DECIMAL         reduce using rule 36 (comparison -> term MORE_THAN term .)
    TILDE           reduce using rule 36 (comparison -> term MORE_THAN term .)
    COMMA           reduce using rule 36 (comparison -> term MORE_THAN term .)


state 50

    (37) comparison -> term LESS_THAN_OR_EQUAL_TO term .

    QUESTION_MARK   reduce using rule 37 (comparison -> term LESS_THAN_OR_EQUAL_TO term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 37 (comparison -> term LESS_THAN_OR_EQUAL_TO term .)
    DECIMAL         reduce using rule 37 (comparison -> term LESS_THAN_OR_EQUAL_TO term .)
    TILDE           reduce using rule 37 (comparison -> term LESS_THAN_OR_EQUAL_TO term .)
    COMMA           reduce using rule 37 (comparison -> term LESS_THAN_OR_EQUAL_TO term .)


state 51

    (38) comparison -> term MORE_THAN_OR_EQUAL_TO term .

    QUESTION_MARK   reduce using rule 38 (comparison -> term MORE_THAN_OR_EQUAL_TO term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 38 (comparison -> term MORE_THAN_OR_EQUAL_TO term .)
    DECIMAL         reduce using rule 38 (comparison -> term MORE_THAN_OR_EQUAL_TO term .)
    TILDE           reduce using rule 38 (comparison -> term MORE_THAN_OR_EQUAL_TO term .)
    COMMA           reduce using rule 38 (comparison -> term MORE_THAN_OR_EQUAL_TO term .)


state 52

    (39) comparison -> term NOT_EQUAL_ALT term .

    QUESTION_MARK   reduce using rule 39 (comparison -> term NOT_EQUAL_ALT term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 39 (comparison -> term NOT_EQUAL_ALT term .)
    DECIMAL         reduce using rule 39 (comparison -> term NOT_EQUAL_ALT term .)
    TILDE           reduce using rule 39 (comparison -> term NOT_EQUAL_ALT term .)
    COMMA           reduce using rule 39 (comparison -> term NOT_EQUAL_ALT term .)


state 53

    (15) body -> literal COMMA . body
    (15) body -> . literal COMMA body
    (16) body -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . term EQUAL term
    (34) comparison -> . term NOT_EQUAL term
    (35) comparison -> . term LESS_THAN term
    (36) comparison -> . term MORE_THAN term
    (37) comparison -> . term LESS_THAN_OR_EQUAL_TO term
    (38) comparison -> . term MORE_THAN_OR_EQUAL_TO term
    (39) comparison -> . term NOT_EQUAL_ALT term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 18
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    literal                        shift and go to state 36
    body                           shift and go to state 58
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    term                           shift and go to state 16
    constant                       shift and go to state 17

state 54

    (12) requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .

    LEFT_BRACKET    reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    VARIABLE        reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    IDENTIFIER      reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    STRING          reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    IGNORE          reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    INTEGER         reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    BOOLEAN         reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    $end            reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)


state 55

    (18) literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    DECIMAL         reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    TILDE           reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    COMMA           reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)


state 56

    (24) terms -> term COMMA . terms
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    term                           shift and go to state 41
    terms                          shift and go to state 59
    constant                       shift and go to state 17

state 57

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET . terms RIGHT_BRACKET
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 42
    IGNORE          shift and go to state 18
    IDENTIFIER      shift and go to state 43
    STRING          shift and go to state 44
    INTEGER         shift and go to state 19
    BOOLEAN         shift and go to state 20

    terms                          shift and go to state 60
    term                           shift and go to state 41
    constant                       shift and go to state 17

state 58

    (15) body -> literal COMMA body .

    DECIMAL         reduce using rule 15 (body -> literal COMMA body .)
    TILDE           reduce using rule 15 (body -> literal COMMA body .)


state 59

    (24) terms -> term COMMA terms .

    RIGHT_BRACKET   reduce using rule 24 (terms -> term COMMA terms .)


state 60

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 61


state 61

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    DECIMAL         reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    TILDE           reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    COMMA           reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> statement)
WARNING: rejected rule (empty -> <empty>) in state 2
