Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement program
Rule 2     program -> statement
Rule 3     program -> empty
Rule 4     empty -> <empty>
Rule 5     statement -> assertion
Rule 6     statement -> retraction
Rule 7     statement -> query
Rule 8     statement -> requirement
Rule 9     assertion -> clause DECIMAL
Rule 10    retraction -> clause TILDE
Rule 11    query -> literal QUESTION_MARK
Rule 12    requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
Rule 13    clause -> literal HEAD_AND_BODY_SEPARATOR body
Rule 14    clause -> literal
Rule 15    body -> literal COMMA body
Rule 16    body -> literal
Rule 17    literal -> predicate LEFT_BRACKET RIGHT_BRACKET
Rule 18    literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET
Rule 19    literal -> predicate
Rule 20    literal -> comparison
Rule 21    literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
Rule 22    predicate -> IDENTIFIER
Rule 23    predicate -> STRING
Rule 24    terms -> term COMMA terms
Rule 25    terms -> term
Rule 26    term -> VARIABLE
Rule 27    term -> constant
Rule 28    term -> IGNORE
Rule 29    constant -> IDENTIFIER
Rule 30    constant -> STRING
Rule 31    constant -> INTEGER
Rule 32    constant -> BOOLEAN
Rule 33    comparison -> comparisonterm EQUAL comparisonterm
Rule 34    comparison -> comparisonterm NOT_EQUAL comparisonterm
Rule 35    comparison -> comparisonterm LESS_THAN comparisonterm
Rule 36    comparison -> comparisonterm MORE_THAN comparisonterm
Rule 37    comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm
Rule 38    comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm
Rule 39    comparison -> comparisonterm NOT_EQUAL_ALT comparisonterm
Rule 40    comparisonterm -> term

Terminals, with rules where they appear

BOOLEAN              : 32
COMMA                : 15 24
COMMENT              : 
DECIMAL              : 9 12
EQUAL                : 33
HEAD_AND_BODY_SEPARATOR : 13 21
IDENTIFIER           : 12 21 22 29
IGNORE               : 28
INTEGER              : 31
LEFT_BRACKET         : 12 17 18 21
LESS_THAN            : 35
LESS_THAN_OR_EQUAL_TO : 37
MORE_THAN            : 36
MORE_THAN_OR_EQUAL_TO : 38
NOT_EQUAL            : 34
NOT_EQUAL_ALT        : 39
QUESTION_MARK        : 11
RIGHT_BRACKET        : 12 17 18 21
STRING               : 23 30
TILDE                : 10
VARIABLE             : 21 26
error                : 

Nonterminals, with rules where they appear

assertion            : 5
body                 : 13 15
clause               : 9 10
comparison           : 20
comparisonterm       : 33 33 34 34 35 35 36 36 37 37 38 38 39 39
constant             : 27
empty                : 3
literal              : 11 13 14 15 16
predicate            : 17 18 19
program              : 1 0
query                : 7
requirement          : 8
retraction           : 6
statement            : 1 2
term                 : 24 25 40
terms                : 18 21 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement program
    (2) program -> . statement
    (3) program -> . empty
    (5) statement -> . assertion
    (6) statement -> . retraction
    (7) statement -> . query
    (8) statement -> . requirement
    (4) empty -> .
    (9) assertion -> . clause DECIMAL
    (10) retraction -> . clause TILDE
    (11) query -> . literal QUESTION_MARK
    (12) requirement -> . LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
    (13) clause -> . literal HEAD_AND_BODY_SEPARATOR body
    (14) clause -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . comparisonterm EQUAL comparisonterm
    (34) comparison -> . comparisonterm NOT_EQUAL comparisonterm
    (35) comparison -> . comparisonterm LESS_THAN comparisonterm
    (36) comparison -> . comparisonterm MORE_THAN comparisonterm
    (37) comparison -> . comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm
    (38) comparison -> . comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm
    (39) comparison -> . comparisonterm NOT_EQUAL_ALT comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    $end            reduce using rule 4 (empty -> .)
    LEFT_BRACKET    shift and go to state 10
    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 19
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    program                        shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    assertion                      shift and go to state 4
    retraction                     shift and go to state 5
    query                          shift and go to state 6
    requirement                    shift and go to state 7
    clause                         shift and go to state 8
    literal                        shift and go to state 9
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterm                 shift and go to state 16
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> statement . program
    (2) program -> statement .
    (1) program -> . statement program
    (2) program -> . statement
    (3) program -> . empty
    (5) statement -> . assertion
    (6) statement -> . retraction
    (7) statement -> . query
    (8) statement -> . requirement
    (4) empty -> .
    (9) assertion -> . clause DECIMAL
    (10) retraction -> . clause TILDE
    (11) query -> . literal QUESTION_MARK
    (12) requirement -> . LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL
    (13) clause -> . literal HEAD_AND_BODY_SEPARATOR body
    (14) clause -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . comparisonterm EQUAL comparisonterm
    (34) comparison -> . comparisonterm NOT_EQUAL comparisonterm
    (35) comparison -> . comparisonterm LESS_THAN comparisonterm
    (36) comparison -> . comparisonterm MORE_THAN comparisonterm
    (37) comparison -> . comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm
    (38) comparison -> . comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm
    (39) comparison -> . comparisonterm NOT_EQUAL_ALT comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

  ! reduce/reduce conflict for $end resolved using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    LEFT_BRACKET    shift and go to state 10
    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 19
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

  ! $end            [ reduce using rule 4 (empty -> .) ]

    statement                      shift and go to state 2
    program                        shift and go to state 22
    empty                          shift and go to state 3
    assertion                      shift and go to state 4
    retraction                     shift and go to state 5
    query                          shift and go to state 6
    requirement                    shift and go to state 7
    clause                         shift and go to state 8
    literal                        shift and go to state 9
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterm                 shift and go to state 16
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 3

    (3) program -> empty .

    $end            reduce using rule 3 (program -> empty .)


state 4

    (5) statement -> assertion .

    LEFT_BRACKET    reduce using rule 5 (statement -> assertion .)
    VARIABLE        reduce using rule 5 (statement -> assertion .)
    IDENTIFIER      reduce using rule 5 (statement -> assertion .)
    STRING          reduce using rule 5 (statement -> assertion .)
    IGNORE          reduce using rule 5 (statement -> assertion .)
    INTEGER         reduce using rule 5 (statement -> assertion .)
    BOOLEAN         reduce using rule 5 (statement -> assertion .)
    $end            reduce using rule 5 (statement -> assertion .)


state 5

    (6) statement -> retraction .

    LEFT_BRACKET    reduce using rule 6 (statement -> retraction .)
    VARIABLE        reduce using rule 6 (statement -> retraction .)
    IDENTIFIER      reduce using rule 6 (statement -> retraction .)
    STRING          reduce using rule 6 (statement -> retraction .)
    IGNORE          reduce using rule 6 (statement -> retraction .)
    INTEGER         reduce using rule 6 (statement -> retraction .)
    BOOLEAN         reduce using rule 6 (statement -> retraction .)
    $end            reduce using rule 6 (statement -> retraction .)


state 6

    (7) statement -> query .

    LEFT_BRACKET    reduce using rule 7 (statement -> query .)
    VARIABLE        reduce using rule 7 (statement -> query .)
    IDENTIFIER      reduce using rule 7 (statement -> query .)
    STRING          reduce using rule 7 (statement -> query .)
    IGNORE          reduce using rule 7 (statement -> query .)
    INTEGER         reduce using rule 7 (statement -> query .)
    BOOLEAN         reduce using rule 7 (statement -> query .)
    $end            reduce using rule 7 (statement -> query .)


state 7

    (8) statement -> requirement .

    LEFT_BRACKET    reduce using rule 8 (statement -> requirement .)
    VARIABLE        reduce using rule 8 (statement -> requirement .)
    IDENTIFIER      reduce using rule 8 (statement -> requirement .)
    STRING          reduce using rule 8 (statement -> requirement .)
    IGNORE          reduce using rule 8 (statement -> requirement .)
    INTEGER         reduce using rule 8 (statement -> requirement .)
    BOOLEAN         reduce using rule 8 (statement -> requirement .)
    $end            reduce using rule 8 (statement -> requirement .)


state 8

    (9) assertion -> clause . DECIMAL
    (10) retraction -> clause . TILDE

    DECIMAL         shift and go to state 23
    TILDE           shift and go to state 24


state 9

    (11) query -> literal . QUESTION_MARK
    (13) clause -> literal . HEAD_AND_BODY_SEPARATOR body
    (14) clause -> literal .

    QUESTION_MARK   shift and go to state 25
    HEAD_AND_BODY_SEPARATOR shift and go to state 26
    DECIMAL         reduce using rule 14 (clause -> literal .)
    TILDE           reduce using rule 14 (clause -> literal .)


state 10

    (12) requirement -> LEFT_BRACKET . IDENTIFIER RIGHT_BRACKET DECIMAL

    IDENTIFIER      shift and go to state 27


state 11

    (22) predicate -> IDENTIFIER .
    (29) constant -> IDENTIFIER .

    LEFT_BRACKET    reduce using rule 22 (predicate -> IDENTIFIER .)
    QUESTION_MARK   reduce using rule 22 (predicate -> IDENTIFIER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 22 (predicate -> IDENTIFIER .)
    DECIMAL         reduce using rule 22 (predicate -> IDENTIFIER .)
    TILDE           reduce using rule 22 (predicate -> IDENTIFIER .)
    COMMA           reduce using rule 22 (predicate -> IDENTIFIER .)
    EQUAL           reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN       reduce using rule 29 (constant -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 29 (constant -> IDENTIFIER .)
    NOT_EQUAL_ALT   reduce using rule 29 (constant -> IDENTIFIER .)


state 12

    (17) literal -> predicate . LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> predicate . LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> predicate .

    LEFT_BRACKET    shift and go to state 28
    QUESTION_MARK   reduce using rule 19 (literal -> predicate .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 19 (literal -> predicate .)
    DECIMAL         reduce using rule 19 (literal -> predicate .)
    TILDE           reduce using rule 19 (literal -> predicate .)
    COMMA           reduce using rule 19 (literal -> predicate .)


state 13

    (20) literal -> comparison .

    QUESTION_MARK   reduce using rule 20 (literal -> comparison .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 20 (literal -> comparison .)
    DECIMAL         reduce using rule 20 (literal -> comparison .)
    TILDE           reduce using rule 20 (literal -> comparison .)
    COMMA           reduce using rule 20 (literal -> comparison .)


state 14

    (21) literal -> VARIABLE . HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (26) term -> VARIABLE .

    HEAD_AND_BODY_SEPARATOR shift and go to state 29
    EQUAL           reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN       reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN       reduce using rule 26 (term -> VARIABLE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 26 (term -> VARIABLE .)
    NOT_EQUAL_ALT   reduce using rule 26 (term -> VARIABLE .)


state 15

    (23) predicate -> STRING .
    (30) constant -> STRING .

    LEFT_BRACKET    reduce using rule 23 (predicate -> STRING .)
    QUESTION_MARK   reduce using rule 23 (predicate -> STRING .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 23 (predicate -> STRING .)
    DECIMAL         reduce using rule 23 (predicate -> STRING .)
    TILDE           reduce using rule 23 (predicate -> STRING .)
    COMMA           reduce using rule 23 (predicate -> STRING .)
    EQUAL           reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL       reduce using rule 30 (constant -> STRING .)
    LESS_THAN       reduce using rule 30 (constant -> STRING .)
    MORE_THAN       reduce using rule 30 (constant -> STRING .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 30 (constant -> STRING .)
    NOT_EQUAL_ALT   reduce using rule 30 (constant -> STRING .)


state 16

    (33) comparison -> comparisonterm . EQUAL comparisonterm
    (34) comparison -> comparisonterm . NOT_EQUAL comparisonterm
    (35) comparison -> comparisonterm . LESS_THAN comparisonterm
    (36) comparison -> comparisonterm . MORE_THAN comparisonterm
    (37) comparison -> comparisonterm . LESS_THAN_OR_EQUAL_TO comparisonterm
    (38) comparison -> comparisonterm . MORE_THAN_OR_EQUAL_TO comparisonterm
    (39) comparison -> comparisonterm . NOT_EQUAL_ALT comparisonterm

    EQUAL           shift and go to state 30
    NOT_EQUAL       shift and go to state 31
    LESS_THAN       shift and go to state 32
    MORE_THAN       shift and go to state 33
    LESS_THAN_OR_EQUAL_TO shift and go to state 34
    MORE_THAN_OR_EQUAL_TO shift and go to state 35
    NOT_EQUAL_ALT   shift and go to state 36


state 17

    (40) comparisonterm -> term .

    EQUAL           reduce using rule 40 (comparisonterm -> term .)
    NOT_EQUAL       reduce using rule 40 (comparisonterm -> term .)
    LESS_THAN       reduce using rule 40 (comparisonterm -> term .)
    MORE_THAN       reduce using rule 40 (comparisonterm -> term .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 40 (comparisonterm -> term .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 40 (comparisonterm -> term .)
    NOT_EQUAL_ALT   reduce using rule 40 (comparisonterm -> term .)
    QUESTION_MARK   reduce using rule 40 (comparisonterm -> term .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 40 (comparisonterm -> term .)
    DECIMAL         reduce using rule 40 (comparisonterm -> term .)
    TILDE           reduce using rule 40 (comparisonterm -> term .)
    COMMA           reduce using rule 40 (comparisonterm -> term .)


state 18

    (27) term -> constant .

    EQUAL           reduce using rule 27 (term -> constant .)
    NOT_EQUAL       reduce using rule 27 (term -> constant .)
    LESS_THAN       reduce using rule 27 (term -> constant .)
    MORE_THAN       reduce using rule 27 (term -> constant .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 27 (term -> constant .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 27 (term -> constant .)
    NOT_EQUAL_ALT   reduce using rule 27 (term -> constant .)
    COMMA           reduce using rule 27 (term -> constant .)
    RIGHT_BRACKET   reduce using rule 27 (term -> constant .)
    QUESTION_MARK   reduce using rule 27 (term -> constant .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 27 (term -> constant .)
    DECIMAL         reduce using rule 27 (term -> constant .)
    TILDE           reduce using rule 27 (term -> constant .)


state 19

    (28) term -> IGNORE .

    EQUAL           reduce using rule 28 (term -> IGNORE .)
    NOT_EQUAL       reduce using rule 28 (term -> IGNORE .)
    LESS_THAN       reduce using rule 28 (term -> IGNORE .)
    MORE_THAN       reduce using rule 28 (term -> IGNORE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 28 (term -> IGNORE .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 28 (term -> IGNORE .)
    NOT_EQUAL_ALT   reduce using rule 28 (term -> IGNORE .)
    COMMA           reduce using rule 28 (term -> IGNORE .)
    RIGHT_BRACKET   reduce using rule 28 (term -> IGNORE .)
    QUESTION_MARK   reduce using rule 28 (term -> IGNORE .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 28 (term -> IGNORE .)
    DECIMAL         reduce using rule 28 (term -> IGNORE .)
    TILDE           reduce using rule 28 (term -> IGNORE .)


state 20

    (31) constant -> INTEGER .

    EQUAL           reduce using rule 31 (constant -> INTEGER .)
    NOT_EQUAL       reduce using rule 31 (constant -> INTEGER .)
    LESS_THAN       reduce using rule 31 (constant -> INTEGER .)
    MORE_THAN       reduce using rule 31 (constant -> INTEGER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 31 (constant -> INTEGER .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 31 (constant -> INTEGER .)
    NOT_EQUAL_ALT   reduce using rule 31 (constant -> INTEGER .)
    COMMA           reduce using rule 31 (constant -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 31 (constant -> INTEGER .)
    QUESTION_MARK   reduce using rule 31 (constant -> INTEGER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 31 (constant -> INTEGER .)
    DECIMAL         reduce using rule 31 (constant -> INTEGER .)
    TILDE           reduce using rule 31 (constant -> INTEGER .)


state 21

    (32) constant -> BOOLEAN .

    EQUAL           reduce using rule 32 (constant -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 32 (constant -> BOOLEAN .)
    LESS_THAN       reduce using rule 32 (constant -> BOOLEAN .)
    MORE_THAN       reduce using rule 32 (constant -> BOOLEAN .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 32 (constant -> BOOLEAN .)
    MORE_THAN_OR_EQUAL_TO reduce using rule 32 (constant -> BOOLEAN .)
    NOT_EQUAL_ALT   reduce using rule 32 (constant -> BOOLEAN .)
    COMMA           reduce using rule 32 (constant -> BOOLEAN .)
    RIGHT_BRACKET   reduce using rule 32 (constant -> BOOLEAN .)
    QUESTION_MARK   reduce using rule 32 (constant -> BOOLEAN .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 32 (constant -> BOOLEAN .)
    DECIMAL         reduce using rule 32 (constant -> BOOLEAN .)
    TILDE           reduce using rule 32 (constant -> BOOLEAN .)


state 22

    (1) program -> statement program .

    $end            reduce using rule 1 (program -> statement program .)


state 23

    (9) assertion -> clause DECIMAL .

    LEFT_BRACKET    reduce using rule 9 (assertion -> clause DECIMAL .)
    VARIABLE        reduce using rule 9 (assertion -> clause DECIMAL .)
    IDENTIFIER      reduce using rule 9 (assertion -> clause DECIMAL .)
    STRING          reduce using rule 9 (assertion -> clause DECIMAL .)
    IGNORE          reduce using rule 9 (assertion -> clause DECIMAL .)
    INTEGER         reduce using rule 9 (assertion -> clause DECIMAL .)
    BOOLEAN         reduce using rule 9 (assertion -> clause DECIMAL .)
    $end            reduce using rule 9 (assertion -> clause DECIMAL .)


state 24

    (10) retraction -> clause TILDE .

    LEFT_BRACKET    reduce using rule 10 (retraction -> clause TILDE .)
    VARIABLE        reduce using rule 10 (retraction -> clause TILDE .)
    IDENTIFIER      reduce using rule 10 (retraction -> clause TILDE .)
    STRING          reduce using rule 10 (retraction -> clause TILDE .)
    IGNORE          reduce using rule 10 (retraction -> clause TILDE .)
    INTEGER         reduce using rule 10 (retraction -> clause TILDE .)
    BOOLEAN         reduce using rule 10 (retraction -> clause TILDE .)
    $end            reduce using rule 10 (retraction -> clause TILDE .)


state 25

    (11) query -> literal QUESTION_MARK .

    LEFT_BRACKET    reduce using rule 11 (query -> literal QUESTION_MARK .)
    VARIABLE        reduce using rule 11 (query -> literal QUESTION_MARK .)
    IDENTIFIER      reduce using rule 11 (query -> literal QUESTION_MARK .)
    STRING          reduce using rule 11 (query -> literal QUESTION_MARK .)
    IGNORE          reduce using rule 11 (query -> literal QUESTION_MARK .)
    INTEGER         reduce using rule 11 (query -> literal QUESTION_MARK .)
    BOOLEAN         reduce using rule 11 (query -> literal QUESTION_MARK .)
    $end            reduce using rule 11 (query -> literal QUESTION_MARK .)


state 26

    (13) clause -> literal HEAD_AND_BODY_SEPARATOR . body
    (15) body -> . literal COMMA body
    (16) body -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . comparisonterm EQUAL comparisonterm
    (34) comparison -> . comparisonterm NOT_EQUAL comparisonterm
    (35) comparison -> . comparisonterm LESS_THAN comparisonterm
    (36) comparison -> . comparisonterm MORE_THAN comparisonterm
    (37) comparison -> . comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm
    (38) comparison -> . comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm
    (39) comparison -> . comparisonterm NOT_EQUAL_ALT comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 19
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    literal                        shift and go to state 37
    body                           shift and go to state 38
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterm                 shift and go to state 16
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 27

    (12) requirement -> LEFT_BRACKET IDENTIFIER . RIGHT_BRACKET DECIMAL

    RIGHT_BRACKET   shift and go to state 39


state 28

    (17) literal -> predicate LEFT_BRACKET . RIGHT_BRACKET
    (18) literal -> predicate LEFT_BRACKET . terms RIGHT_BRACKET
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    RIGHT_BRACKET   shift and go to state 40
    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    terms                          shift and go to state 41
    term                           shift and go to state 42
    constant                       shift and go to state 18

state 29

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR . IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET

    IDENTIFIER      shift and go to state 46


state 30

    (33) comparison -> comparisonterm EQUAL . comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    comparisonterm                 shift and go to state 47
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 31

    (34) comparison -> comparisonterm NOT_EQUAL . comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    comparisonterm                 shift and go to state 48
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 32

    (35) comparison -> comparisonterm LESS_THAN . comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    comparisonterm                 shift and go to state 49
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 33

    (36) comparison -> comparisonterm MORE_THAN . comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    comparisonterm                 shift and go to state 50
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 34

    (37) comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO . comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    comparisonterm                 shift and go to state 51
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 35

    (38) comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO . comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    comparisonterm                 shift and go to state 52
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 36

    (39) comparison -> comparisonterm NOT_EQUAL_ALT . comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    comparisonterm                 shift and go to state 53
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 37

    (15) body -> literal . COMMA body
    (16) body -> literal .

    COMMA           shift and go to state 54
    DECIMAL         reduce using rule 16 (body -> literal .)
    TILDE           reduce using rule 16 (body -> literal .)


state 38

    (13) clause -> literal HEAD_AND_BODY_SEPARATOR body .

    DECIMAL         reduce using rule 13 (clause -> literal HEAD_AND_BODY_SEPARATOR body .)
    TILDE           reduce using rule 13 (clause -> literal HEAD_AND_BODY_SEPARATOR body .)


state 39

    (12) requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET . DECIMAL

    DECIMAL         shift and go to state 55


state 40

    (17) literal -> predicate LEFT_BRACKET RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    DECIMAL         reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    TILDE           reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)
    COMMA           reduce using rule 17 (literal -> predicate LEFT_BRACKET RIGHT_BRACKET .)


state 41

    (18) literal -> predicate LEFT_BRACKET terms . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 56


state 42

    (24) terms -> term . COMMA terms
    (25) terms -> term .

    COMMA           shift and go to state 57
    RIGHT_BRACKET   reduce using rule 25 (terms -> term .)


state 43

    (26) term -> VARIABLE .

    COMMA           reduce using rule 26 (term -> VARIABLE .)
    RIGHT_BRACKET   reduce using rule 26 (term -> VARIABLE .)
    QUESTION_MARK   reduce using rule 26 (term -> VARIABLE .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 26 (term -> VARIABLE .)
    DECIMAL         reduce using rule 26 (term -> VARIABLE .)
    TILDE           reduce using rule 26 (term -> VARIABLE .)


state 44

    (29) constant -> IDENTIFIER .

    COMMA           reduce using rule 29 (constant -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 29 (constant -> IDENTIFIER .)
    QUESTION_MARK   reduce using rule 29 (constant -> IDENTIFIER .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 29 (constant -> IDENTIFIER .)
    DECIMAL         reduce using rule 29 (constant -> IDENTIFIER .)
    TILDE           reduce using rule 29 (constant -> IDENTIFIER .)


state 45

    (30) constant -> STRING .

    COMMA           reduce using rule 30 (constant -> STRING .)
    RIGHT_BRACKET   reduce using rule 30 (constant -> STRING .)
    QUESTION_MARK   reduce using rule 30 (constant -> STRING .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 30 (constant -> STRING .)
    DECIMAL         reduce using rule 30 (constant -> STRING .)
    TILDE           reduce using rule 30 (constant -> STRING .)


state 46

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER . LEFT_BRACKET terms RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 58


state 47

    (33) comparison -> comparisonterm EQUAL comparisonterm .

    QUESTION_MARK   reduce using rule 33 (comparison -> comparisonterm EQUAL comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 33 (comparison -> comparisonterm EQUAL comparisonterm .)
    DECIMAL         reduce using rule 33 (comparison -> comparisonterm EQUAL comparisonterm .)
    TILDE           reduce using rule 33 (comparison -> comparisonterm EQUAL comparisonterm .)
    COMMA           reduce using rule 33 (comparison -> comparisonterm EQUAL comparisonterm .)


state 48

    (34) comparison -> comparisonterm NOT_EQUAL comparisonterm .

    QUESTION_MARK   reduce using rule 34 (comparison -> comparisonterm NOT_EQUAL comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 34 (comparison -> comparisonterm NOT_EQUAL comparisonterm .)
    DECIMAL         reduce using rule 34 (comparison -> comparisonterm NOT_EQUAL comparisonterm .)
    TILDE           reduce using rule 34 (comparison -> comparisonterm NOT_EQUAL comparisonterm .)
    COMMA           reduce using rule 34 (comparison -> comparisonterm NOT_EQUAL comparisonterm .)


state 49

    (35) comparison -> comparisonterm LESS_THAN comparisonterm .

    QUESTION_MARK   reduce using rule 35 (comparison -> comparisonterm LESS_THAN comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 35 (comparison -> comparisonterm LESS_THAN comparisonterm .)
    DECIMAL         reduce using rule 35 (comparison -> comparisonterm LESS_THAN comparisonterm .)
    TILDE           reduce using rule 35 (comparison -> comparisonterm LESS_THAN comparisonterm .)
    COMMA           reduce using rule 35 (comparison -> comparisonterm LESS_THAN comparisonterm .)


state 50

    (36) comparison -> comparisonterm MORE_THAN comparisonterm .

    QUESTION_MARK   reduce using rule 36 (comparison -> comparisonterm MORE_THAN comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 36 (comparison -> comparisonterm MORE_THAN comparisonterm .)
    DECIMAL         reduce using rule 36 (comparison -> comparisonterm MORE_THAN comparisonterm .)
    TILDE           reduce using rule 36 (comparison -> comparisonterm MORE_THAN comparisonterm .)
    COMMA           reduce using rule 36 (comparison -> comparisonterm MORE_THAN comparisonterm .)


state 51

    (37) comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm .

    QUESTION_MARK   reduce using rule 37 (comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 37 (comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm .)
    DECIMAL         reduce using rule 37 (comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm .)
    TILDE           reduce using rule 37 (comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm .)
    COMMA           reduce using rule 37 (comparison -> comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm .)


state 52

    (38) comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm .

    QUESTION_MARK   reduce using rule 38 (comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 38 (comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm .)
    DECIMAL         reduce using rule 38 (comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm .)
    TILDE           reduce using rule 38 (comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm .)
    COMMA           reduce using rule 38 (comparison -> comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm .)


state 53

    (39) comparison -> comparisonterm NOT_EQUAL_ALT comparisonterm .

    QUESTION_MARK   reduce using rule 39 (comparison -> comparisonterm NOT_EQUAL_ALT comparisonterm .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 39 (comparison -> comparisonterm NOT_EQUAL_ALT comparisonterm .)
    DECIMAL         reduce using rule 39 (comparison -> comparisonterm NOT_EQUAL_ALT comparisonterm .)
    TILDE           reduce using rule 39 (comparison -> comparisonterm NOT_EQUAL_ALT comparisonterm .)
    COMMA           reduce using rule 39 (comparison -> comparisonterm NOT_EQUAL_ALT comparisonterm .)


state 54

    (15) body -> literal COMMA . body
    (15) body -> . literal COMMA body
    (16) body -> . literal
    (17) literal -> . predicate LEFT_BRACKET RIGHT_BRACKET
    (18) literal -> . predicate LEFT_BRACKET terms RIGHT_BRACKET
    (19) literal -> . predicate
    (20) literal -> . comparison
    (21) literal -> . VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET
    (22) predicate -> . IDENTIFIER
    (23) predicate -> . STRING
    (33) comparison -> . comparisonterm EQUAL comparisonterm
    (34) comparison -> . comparisonterm NOT_EQUAL comparisonterm
    (35) comparison -> . comparisonterm LESS_THAN comparisonterm
    (36) comparison -> . comparisonterm MORE_THAN comparisonterm
    (37) comparison -> . comparisonterm LESS_THAN_OR_EQUAL_TO comparisonterm
    (38) comparison -> . comparisonterm MORE_THAN_OR_EQUAL_TO comparisonterm
    (39) comparison -> . comparisonterm NOT_EQUAL_ALT comparisonterm
    (40) comparisonterm -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 14
    IDENTIFIER      shift and go to state 11
    STRING          shift and go to state 15
    IGNORE          shift and go to state 19
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    literal                        shift and go to state 37
    body                           shift and go to state 59
    predicate                      shift and go to state 12
    comparison                     shift and go to state 13
    comparisonterm                 shift and go to state 16
    term                           shift and go to state 17
    constant                       shift and go to state 18

state 55

    (12) requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .

    LEFT_BRACKET    reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    VARIABLE        reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    IDENTIFIER      reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    STRING          reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    IGNORE          reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    INTEGER         reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    BOOLEAN         reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)
    $end            reduce using rule 12 (requirement -> LEFT_BRACKET IDENTIFIER RIGHT_BRACKET DECIMAL .)


state 56

    (18) literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    DECIMAL         reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    TILDE           reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)
    COMMA           reduce using rule 18 (literal -> predicate LEFT_BRACKET terms RIGHT_BRACKET .)


state 57

    (24) terms -> term COMMA . terms
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    term                           shift and go to state 42
    terms                          shift and go to state 60
    constant                       shift and go to state 18

state 58

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET . terms RIGHT_BRACKET
    (24) terms -> . term COMMA terms
    (25) terms -> . term
    (26) term -> . VARIABLE
    (27) term -> . constant
    (28) term -> . IGNORE
    (29) constant -> . IDENTIFIER
    (30) constant -> . STRING
    (31) constant -> . INTEGER
    (32) constant -> . BOOLEAN

    VARIABLE        shift and go to state 43
    IGNORE          shift and go to state 19
    IDENTIFIER      shift and go to state 44
    STRING          shift and go to state 45
    INTEGER         shift and go to state 20
    BOOLEAN         shift and go to state 21

    terms                          shift and go to state 61
    term                           shift and go to state 42
    constant                       shift and go to state 18

state 59

    (15) body -> literal COMMA body .

    DECIMAL         reduce using rule 15 (body -> literal COMMA body .)
    TILDE           reduce using rule 15 (body -> literal COMMA body .)


state 60

    (24) terms -> term COMMA terms .

    RIGHT_BRACKET   reduce using rule 24 (terms -> term COMMA terms .)


state 61

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 62


state 62

    (21) literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .

    QUESTION_MARK   reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    HEAD_AND_BODY_SEPARATOR reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    DECIMAL         reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    TILDE           reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)
    COMMA           reduce using rule 21 (literal -> VARIABLE HEAD_AND_BODY_SEPARATOR IDENTIFIER LEFT_BRACKET terms RIGHT_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> statement)
WARNING: rejected rule (empty -> <empty>) in state 2
